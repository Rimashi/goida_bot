import telebot
import time
import random
import re

token = "7038285388:AAFEyPahgAyCrNkAwUlmN_o6Dlas8DhBwL4"
bot = telebot.TeleBot(token)


users_id = set()
downs = []

slang_answers = {
    "—Å–≤–æ": ["—Å–≤–æ –∑–∞ –Ω–∞—à–∏—Ö –≥–æ–π–¥–∞ —É—Ä–∞ –ø–æ–±–µ–¥–∞ –≥–æ–æ–æ–æ–æ–ª", "–ì–û–ô–î–ê–ê–ê–ê–ê", "ZZZZZZZZZZZZZZZZZZZ"],
    "z": "–°–õ–ê–í–ê Züôè‚ù§Ô∏è–°–õ–ê–í–ê Züôè‚ù§Ô∏è–ê–ù–ì–ï–õ–ê –•–†–ê–ù–ò–¢–ï–õ–Ø Z –ö–ê–ñ–î–û–ú–£ –ò–ó –í–ê–°üôè‚ù§Ô∏è–ë–û–ñ–ï –•–†–ê–ù–ò Züôè‚ù§Ô∏è–°–ü–ê–°–ò–ë–û –í–ê–ú –ù–ê–®–ò Züôèüèº‚ù§Ô∏èüá∑üá∫ –•–†–û–ù–ò Z‚úäüá∑üá∫üíØ–°–ª–∞–≤–∞ –ë–æ–≥—É Züôè‚ù§Ô∏è–°–õ–ê–í–ê Züôè‚ù§Ô∏è–°–õ–ê–í–ê",
    "zv": "ZVZVZVZVZVZVZVZVZVZVZVZVZVZVZVZVZVZVZVZVZVZV",
    "zov": "ZOVVVVVVVVVVVVVVVVVVV",
    "–≥–æ–π–¥–∞": [
        "CgACAgQAAxkBAAOOZ3KK6-gyRKw41lOlKM3i01yGKMIAAu8FAAJvw51QZ0GSnOguHOo2BA",
        "CgACAgQAAxkBAAOIZ3KKnFe1g3958pMIiCwJUoCE9z8AAugFAAI18zVS69uk2SLsWR02BA",
        "CgACAgQAAxkBAAOJZ3KKukZ1Qa-IBoDGMEf300JxMckAAm8GAALWy2xQX6iwzA4zVa82BA",
        "CgACAgQAAxkBAAOKZ3KKwAl5c2qZbJBG1GAN_x9RDaQAAjEEAAKmN41STzp5CTAydrs2BA",
        "CgACAgQAAxkBAAOLZ3KKyVP3I0qwYK-X_ZedniSAhEwAAgcGAAKvoTRTFIbTuzW5wxk2BA",
        "CgACAgQAAxkBAAOMZ3KK01DV097dDCmdLYZvH59hlDgAAsIFAAL7VD1R1KUnDFAwsjQ2BA",
        "CgACAgQAAxkBAAONZ3KK5Kyjwz8yVu7-VanHXTNu6BsAAjUGAAIFS2VQpQtNy1P6aro2BA",
    ],
    "–¥–∞": "–ø–∏–∑–¥–∞",
    "–ø–∏–∑–¥–∞": "–¥–∞",
    "–Ω–µ—Ç": "–ø–∏–¥–æ—Ä–∞ –æ—Ç–≤–µ—Ç",
    "–Ω–µ": "–ø–∏–¥–æ—Ä–∞ –æ—Ç–≤–µ....",
    "–ø–∏–¥–æ—Ä–∞ –æ—Ç–≤–µ—Ç": "—à–ª—é—Ö–∏ –∞—Ä–≥—É–º–µ–Ω—Ç",
    "—à–ª—é—Ö–∏ –∞—Ä–≥—É–º–µ–Ω—Ç": "–∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –Ω—É–∂–µ–Ω, –ø–∏–¥–æ—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω",
    "–∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –Ω—É–∂–µ–Ω, –ø–∏–¥–æ—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω": "–ø–∏–¥–æ—Ä –∑–∞—Å–µ–∫—Ä–µ—á–µ–Ω, —Ç–≤–æ–π –∞–Ω–∞–ª –Ω–µ –≤–µ—á–µ–Ω",
    "–ø–∏–¥–æ—Ä –∑–∞—Å–µ–∫—Ä–µ—á–µ–Ω, —Ç–≤–æ–π –∞–Ω–∞–ª –Ω–µ –≤–µ—á–µ–Ω": "–º–æ–π –∞–Ω–∞–ª –Ω–µ –≤–µ—á–µ–Ω, —Ç–≤–æ–π –∞–Ω–∞–ª –ø–æ–º–µ—á–µ–Ω",

}


# connect to mongo


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
def delete_message(chat_id, message_id, delay):
    time.sleep(delay)
    bot.delete_message(chat_id, message_id)


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_message(message):
    users_id.add(message.from_user.id)
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç ‚úåÔ∏è")


# –≤—ã–∑–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –¥–∞—É–Ω–∞
@bot.message_handler(commands=['main_down'])
def main_down(message):
    chat_id = message.chat.id
    down = 5283571568
    st = ""
    user_info = bot.get_chat_member(chat_id, down).user
    if user_info.username:
        st += f"@{user_info.username}\n"
    else:
        st += f"[–¥–∞—É–Ω –±–µ–∑ username](tg://user?id={down})\n"

    for i in range(25):
        sending_message = bot.send_message(chat_id, st, parse_mode="Markdown")
        message_id = sending_message.message_id
        delete_message(chat_id, message_id, 20)


# down commands
@bot.message_handler(commands=['downs'])
def help_message(message):
    st = "–ì–ª–∞–≤–Ω—ã–µ –¥–∞—É–Ω—ã: \n"
    chat_id = message.chat.id
    for down in downs:
        try:
            user_info = bot.get_chat_member(chat_id, down).user
            if user_info.username:
                st += f"@{user_info.username}\n"
            else:
                st += f"[–¥–∞—É–Ω –±–µ–∑ username](tg://user?id={down})\n"
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {down}: {e}")
            st += f"[–¥–∞—É–Ω](tg://user?id={down})\n"

    l = []
    for i in range(25):
        sending_message = bot.send_message(chat_id, st, parse_mode="Markdown")
        message_id = sending_message.message_id
        l.append(message_id)

    for message_id in l:
        delete_message(chat_id, message_id, 60)


# –ö–æ–º–∞–Ω–¥–∞ /all
@bot.message_handler(commands=['all'])
def all_message(message):
    users_id.add(message.from_user.id)
    chat_id = message.chat.id
    if users_id:
        st = "–≠—É, –æ–±—â–∏–π —Å–±–æ—Ä: \n"
        for user in users_id:
            try:
                user_info = bot.get_chat_member(chat_id, user).user
                if user_info.username:
                    st += f"@{user_info.username}\n"
                else:
                    st += f"[–¥–∞—É–Ω –±–µ–∑ username](tg://user?id={user})\n"
            except telebot.apihelper.ApiTelegramException as e:
                print(f"–û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user}: {e}")
        bot.send_message(chat_id, st, parse_mode="Markdown")
    else:
        bot.send_message(chat_id, "–ù–∏–∫–æ–≥–æ –µ—â—ë –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ.", parse_mode="Markdown")


# help command
@bot.message_handler(commands=['help'])
def help_message(message):
    users_id.add(message.from_user.id)
    bot.reply_to(message, "—ç–º–º–º–º–º–º–º–º, –Ω–µ")


# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    users_id.add(message.from_user.id)
    print(users_id)
    for key, value in slang_answers.items():
        # —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        pattern = r'\b' + re.escape(key.lower()) + r'\b'
        if re.search(pattern, message.text.lower()):
            if type(value) is str:
                bot.reply_to(message, value)
            else:
                rand = random.randint(0, len(value) - 1)
                if value[0] == "CgACAgQAAxkBAAOOZ3KK6-gyRKw41lOlKM3i01yGKMIAAu8FAAJvw51QZ0GSnOguHOo2BA":
                    bot.send_animation(message.chat.id, value[rand])
                else:
                    bot.reply_to(message, value[rand])
            break


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
